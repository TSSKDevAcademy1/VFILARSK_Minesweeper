package minesweeper.consoleui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import minesweeper.UserInterface;
import minesweeper.core.Field;

/**
 * Console user interface.
 */
public class ConsoleUI implements UserInterface {
    /** Playing field. */
    private Field field;
    
    /** Input reader. */
    private BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
    
    /**
     * Reads line of text from the reader.
     * @return line as a string
     */
    private String readLine() {
        try {
            return input.readLine();
        } catch (IOException e) {
            return null;
        }
    }
    
    /* (non-Javadoc)
	 * @see minesweeper.consoleui.UserInterface#newGameStarted(minesweeper.core.Field)
	 */
    @Override
	public void newGameStarted(Field field) {
        this.field = field;
        do {
           update();
           processInput();
            throw new UnsupportedOperationException("Resolve the game state - winning or loosing condition.");
        } while(true);
    }
    
    /* (non-Javadoc)
	 * @see minesweeper.consoleui.UserInterface#update()
	 */
    @Override
	public void update() {
    	String pole = field.toString();
    	System.out.printf("%4s"," ");
    	for(int i = 1;i<=field.getColumnCount();i++){
    		System.out.printf("%4s",i);
    	}
    	System.out.printf("%n");
    	System.out.printf("%n");
    	for(int r =0;r<field.getRowCount();r++){
    		System.out.printf("%4s", Character.toString((char)(65+r)));
    		for(int c=0;c<field.getColumnCount();c++){
    				System.out.printf("%4s",field.getTile(r, c));
    		}
    		System.out.printf("%n");
    	}

		
    	
    }
    
    /**
     * Processes user input.
     * Reads line from console and does the action on a playing field according to input string.
     */
    private void processInput() {
    	System.out.println();
		System.out.println("Please enter your selection (X) EXIT, (MA1) MARK, (OB4) OPEN :");
		String input = readLine();
		Pattern p = Pattern.compile("X/([M,O]|[A-I][1-9])");
		Matcher m = p.matcher(input);
		boolean b = m.matches();
		if(b){
			char firstLetter = input.charAt(0);
			switch(firstLetter){
			case "x": 
			}
		}
		
    }

}

//format("%" + n + "s","x")
//new Formatter.format("%4s",c).toString
